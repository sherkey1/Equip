/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package equip;

import com.mysql.jdbc.ResultSet;
import equip.Connector;
import java.sql.*;
import java.util.Vector;
import equip.ExcelExporter;
import java.io.File;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import equip.JTableToExcel;
import equip.MainWindow;

/**
 *
 * @author 3
 */
public class Query extends javax.swing.JFrame implements TableModelListener {

    ResultSet rs;
    ResultSetMetaData rsm;
    String[] columnNames = {"产品型号", "生产厂家", "销售厂商", "生产时间", "安装时间", "安装人员", "联系方式"};
    Object[][] data = null;
    DefaultTableModel model;
    Statement statement;
    MainWindow mainWindow;
    String productId;

    /**
     * Creates new form Query
     */
    public Query(MainWindow m) {
        mainWindow=m;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        B_query = new javax.swing.JButton();
        B_delete = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        B_return = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        B_queryLog = new javax.swing.JButton();
        tx_id = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        B_query.setText("查询");
        B_query.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_queryActionPerformed(evt);
            }
        });

        B_delete.setText("删除");
        B_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_deleteActionPerformed(evt);
            }
        });

        jButton3.setText("导出");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        B_return.setText("返回");
        B_return.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        B_return.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_returnActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(dataTable);

        B_queryLog.setText("查看详细日志");
        B_queryLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_queryLogActionPerformed(evt);
            }
        });

        tx_id.setText("输入设备型号");
        tx_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_idActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(B_return, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(74, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tx_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(B_query)
                .addGap(39, 39, 39)
                .addComponent(B_delete)
                .addGap(35, 35, 35)
                .addComponent(jButton3)
                .addGap(39, 39, 39)
                .addComponent(B_queryLog)
                .addGap(104, 104, 104))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(B_return, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(B_query)
                    .addComponent(B_delete)
                    .addComponent(jButton3)
                    .addComponent(B_queryLog)
                    .addComponent(tx_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //查询按钮的行为
    private void B_queryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_queryActionPerformed
        // TODO add your handling code here:
        try {
            Connector c = new Connector();
//            String sql = "select * from equipment;";
            String sql=getSql();
            rs = (ResultSet) c.sm_updatable.executeQuery(sql);
            rsm = rs.getMetaData();

            int row = 0;
            int column = 0;
            int columnCount = rsm.getColumnCount();
            rs.last();
            int rooCount = rs.getRow();
            rs.beforeFirst();
            data = new Object[rooCount][columnCount];
            while (rs.next()) {
                for (column = 0; column < columnCount; column++) {
                    data[row][column] = rs.getObject(column + 1);
                }
                row++;
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        model = new DefaultTableModel(data, columnNames) {

            public Class getColumnClass(int c) {
                if (dataVector.isEmpty() == false && getValueAt(0, c) != null) {
                    return getValueAt(0, c).getClass();
                } else {
                    return Object.class;
                }
            }
        };
        model.addTableModelListener(this);
        dataTable.setModel(model);
        //实现表格的排序
        RowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>(model);
        dataTable.setRowSorter(sorter);


    }//GEN-LAST:event_B_queryActionPerformed

    //删除按钮的行为
    private void B_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_deleteActionPerformed
        if (isConfirmed()) {
            deleteData();
            showDialog();
        }
    }//GEN-LAST:event_B_deleteActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        deleteFile();
        exportToExcel();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void B_returnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_returnActionPerformed

        this.setVisible(false);
        mainWindow.setVisible(true);
    }//GEN-LAST:event_B_returnActionPerformed

    private void B_queryLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_queryLogActionPerformed
       int select =dataTable.getSelectedRow();
       if(select==-1)
       {
           return;
       }
       select=dataTable.getRowSorter().convertRowIndexToModel(select);
       try
       {
           rs.absolute(select+1);
           productId=rs.getString("id").toString();
//          JOptionPane.showMessageDialog(null, productId, "确认", JOptionPane.WARNING_MESSAGE);
//         new Query_log(productId).setVisible(true);
//         q.getSql();
//         q.showData();
           new ShowSingleLog(productId).setVisible(true);
           
       }
       catch(Exception e)
       {
           e.printStackTrace();
       }
    }//GEN-LAST:event_B_queryLogActionPerformed

    private void tx_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_idActionPerformed
        // TODO add your handling code here:
        B_queryActionPerformed(evt);
    }//GEN-LAST:event_tx_idActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /*
//         * Set the Nimbus look and feel
//         */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /*
//         * If Nimbus (introduced in Java SE 6) is not available, stay with the
//         * default look and feel. For details see
//         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Query.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Query.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Query.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Query.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /*
//         * Create and display the form
//         */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//
//            public void run() {
//                new Query().setVisible(true);
//            }
//        });
//    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_delete;
    private javax.swing.JButton B_query;
    private javax.swing.JButton B_queryLog;
    private javax.swing.JButton B_return;
    private javax.swing.JTable dataTable;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField tx_id;
    // End of variables declaration//GEN-END:variables

    @Override
    public void tableChanged(TableModelEvent e) {
        //-1表示空行
        if (e.getColumn() != -1) {
            Object o = null;
            o = dataTable.getValueAt(e.getFirstRow(), 0);
            if (o != null) {
                //转换到模型行
                int select = e.getFirstRow();
                if (select == -1) {
                    return;
                }
                select = dataTable.getRowSorter().convertRowIndexToModel(select);

                try {
                    rs.absolute(select + 1);
                    //更新数据集中某个位置的内容
                    rs.updateObject(e.getColumn() + 1, dataTable.getValueAt(e.getFirstRow(), e.getColumn()));
                    //更新数据库
                    rs.updateRow();

                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }

    private void deleteData() {
        int select = dataTable.getSelectedRow();
        if (select == -1) {
            return;
        }
        //把表格的行号转换成model里的行号
        select = dataTable.getRowSorter().convertRowIndexToModel(select);
        try {
            rs.absolute(select + 1);
            rs.deleteRow();
            model.removeRow(select);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private boolean isConfirmed() {

        String info = "确认删除所选数据？？";
        int optionType = JOptionPane.OK_CANCEL_OPTION;
        int messageType = JOptionPane.WARNING_MESSAGE;
        int result = JOptionPane.showConfirmDialog(null, info, "确认", optionType);
        return result == JOptionPane.OK_OPTION;
    }

    private void showDialog() {
        String info = "数据删除成功";
        int optionType = JOptionPane.OK_OPTION;
        int messageType = JOptionPane.INFORMATION_MESSAGE;
        JOptionPane.showMessageDialog(null, info, "提示", messageType);
    }

    private void exportToExcel() {
        try
        {
//            ExcelExporter exp=new ExcelExporter();
//            exp.exportTable(dataTable, new File("results.xls"));
            String heading="设备管理信息";
            String inscribe="显示设备信息表格";
              JTableToExcel je=new JTableToExcel();
              je.export(new File("result.xls"), heading, inscribe, dataTable);
        }
        catch(Exception ex)
        {
            System.out.println(ex.getMessage());
            ex.printStackTrace();
        }
    }
    private void deleteFile()
    {
        String path="result.xls";
        File file=new File(path);
        if(file.isFile()&&file.exists())
        {
            file.delete();
        }
        
    }

    private String getSql() {
        String tx,sql;
        tx=tx_id.getText().toString();
        if(tx.equals("输入设备型号")||tx.isEmpty())
        {
            sql="select * from equipment;";
        }
        else
        {
            sql="select *from equipment where id='"+tx+"';";
        }
        return sql;
    }
}
